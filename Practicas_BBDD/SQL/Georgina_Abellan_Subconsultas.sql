/*1. Aeropuertos que tengan la misma longitud de cadena que 
cualquier nombre de director que comience o termine por vocal*/

SELECT NOMBRE FROM AEROPUERTOS AE WHERE LENGTH(NOMBRE) IN
(SELECT LENGTH (NOMBRE) FROM DIRECTOR WHERE
NOMBRE LIKE 'A%' OR NOMBRE LIKE 'E%' OR NOMBRE LIKE 'I%' OR NOMBRE LIKE 'O%' OR NOMBRE LIKE 'U%' OR
NOMBRE LIKE 'a%' OR NOMBRE LIKE 'e%' OR NOMBRE LIKE 'i%' OR NOMBRE LIKE 'o%' OR NOMBRE LIKE 'u%' OR
NOMBRE LIKE '%A' OR NOMBRE LIKE '%E' OR NOMBRE LIKE '%I' OR NOMBRE LIKE '%O' OR NOMBRE LIKE '%U' OR
NOMBRE LIKE '%a' OR NOMBRE LIKE '%e' OR NOMBRE LIKE '%i' OR NOMBRE LIKE '%o' OR NOMBRE LIKE '%u');

/*2. Todos los datos de las escalas que con lo que han subido
y bajado han cubierto la capacidad de vuelo*/ 

SELECT * FROM TENER_ESCALA TE
WHERE TE.NUM_VUELO IN 
(SELECT VO.NUM_VUELO FROM VOLAR VO, AVIONES
WHERE CODIGO=VO.COD_AVION
AND TE.NUM_VUELO=VO.NUM_VUELO AND TE.COD_AVION=VO.COD_AVION AND TE.FECHA_VUELO=VO.FECHA_VUELO
AND (PLAZAS_OCUPADAS + PASAJEROS_SUBEN - PASAJEROS_BAJAN) = CAPACIDAD);

/*3. Nombre de aeropuertos de los que no ha despegado ningun avion*/

SELECT NOMBRE, CODIGO FROM AEROPUERTOS, PROGRAMA_VUELO PR WHERE CODIGO=COD_AERO_DESPEGAR
AND NOT EXISTS (SELECT 1 FROM VOLAR VO WHERE PR.NUM_VUELO=VO.NUM_VUELO);

/*4.  AVIONES QUE TIENEN AL MENOS DOS VUELOS REALIZADOS*/

SELECT * FROM AVIONES WHERE CODIGO IN 
(SELECT COD_AVION FROM VOLAR
WHERE CODIGO=COD_AVION
GROUP BY COD_AVION
HAVING COUNT(*)>=2);

/*5. Avion con más vuelos realizados

Parto de esto para comtrolar las veces
SELECT CODIGO, COUNT(*) FROM AVIONES, VOLAR
WHERE CODIGO=COD_AVION
GROUP BY CODIGO HAVING COUNT(*)=
(SELECT MAX(COUNT(*))FROM VOLAR GROUP BY COD_AVION);*/

SELECT * FROM AVIONES WHERE CODIGO IN
(SELECT COD_AVION FROM VOLAR
WHERE CODIGO=COD_AVION
GROUP BY COD_AVION
HAVING COUNT(*)=
(SELECT MAX(COUNT(*))FROM VOLAR GROUP BY COD_AVION));

/*6. Eliminar aviones que no tengan vuelos realizados

Inserto un avión para probar.
INSERT INTO AVIONES (CODIGO, MODELO) VALUES ('T55', 'KKCHOP'); SELECT MODELO FROM AVIONES WHERE CODIGO='T55';*/

DELETE AVIONES WHERE CODIGO NOT IN (SELECT COD_AVION FROM VOLAR);

/*7.Insertar un avion y asignarle....*/

INSERT INTO AVIONES (CODIGO) VALUES ('777J');

INSERT INTO VOLAR (COD_AVION, NUM_VUELO, FECHA_VUELO, PLAZAS_OCUPADAS)
SELECT '777J', NUM_VUELO, FECHA_VUELO, 200 FROM VOLAR
WHERE COD_AVION IN 
(SELECT COD_AVION FROM AVIONES, VOLAR
WHERE CODIGO=COD_AVION 
GROUP BY COD_AVION HAVING COUNT(*)=(SELECT MIN(COUNT(*)) FROM AVIONES, VOLAR WHERE CODIGO=COD_AVION GROUP BY COD_AVION));

SELECT * FROM VOLAR WHERE COD_AVION='777J'; -- COMPROBAR

/*8. Actualiza a Rusia el país de todos los alumnos que tengan el campo país a extranjero
y que estén matriculados con nota aprobada*/

UPDATE ALUMNOS AL SET PAIS='RUSIA' WHERE PAIS='EXTRANJERO' AND 
(SELECT NOTA FROM MATRICULAR MAT, ASIGNATURAS ASIG WHERE MAT.COD_ASIG=ASIG.COD
AND MAT.DNI_ALU=AL.DNI)>=5;

/*9. Insertar un alumno con nif '999B' y que tenga todos los datos
del alumno con menor edad y alfabeticamente mas pequeño en caso de igualdad*/

INSERT INTO ALUMNOS (DNI, NOMBRE, TELEFONO, PAIS, EDAD) 
SELECT '999B', NOMBRE, TELEFONO, PAIS, EDAD FROM ALUMNOS
WHERE NOMBRE=(SELECT MIN(NOMBRE) FROM ALUMNOS WHERE EDAD=(SELECT MIN(EDAD) FROM ALUMNOS));

/*10.Vuelo con más escalas*/

SELECT * FROM VOLAR VO WHERE NUM_VUELO IN 
(SELECT TE.NUM_VUELO FROM TENER_ESCALA TE WHERE
TE.NUM_VUELO=VO.NUM_VUELO AND TE.COD_AVION=VO.COD_AVION AND TE.FECHA_VUELO=VO.FECHA_VUELO
AND NUMERO_ESCALA = (SELECT MAX(NUMERO_ESCALA)FROM TENER_ESCALA));

/*11. Actualizar la edad de cada alumno con la edad que ya tiene 
más la suma de las notas de sus asignaturas*/

UPDATE ALUMNOS SET EDAD= (SELECT EDAD + SUM(NOTA) FROM MATRICULAR, ASIGNATURAS
WHERE DNI_ALU=DNI AND COD=COD_ASIG) WHERE DNI IN ( SELECT DNI_ALU FROM MATRICULAR);

/*12. Restar 1 a la edad de los alumnos matriculados en la asignatura
con fecha mas antigua*/

UPDATE ALUMNOS SET EDAD= EDAD-1 WHERE DNI IN (SELECT DNI_ALU FROM MATRICULAR
GROUP BY DNI_ALU, FECHA
HAVING FECHA=(SELECT MIN(FECHA) FROM MATRICULAR));

/*13.La media de edad de alumnos de cada país que supere la de España*/

SELECT AVG(EDAD), PAIS FROM ALUMNOS GROUP BY PAIS
HAVING AVG(EDAD) > (SELECT AVG(EDAD) FROM ALUMNOS WHERE PAIS='ESPAÑA');

/* 14. Dia del año con más matriculaciones.

Agrupando por fechas, saco por un lado cuantas veces se repiten
y por otro el maximo numero de repeticiones.
Entonces lo que hago es extraer el dia de la fecha en la que coincida el numero de veces que se repite, con el máximo

SELECT EXTRACT(DAY FROM FECHA) DIA FROM MATRICULAR
GROUP BY FECHA 
HAVING COUNT(*)=(SELECT MAX(D)FROM (SELECT COUNT(*) AS D FROM MATRICULAR GROUP BY FECHA)TABLA);*/

SELECT EXTRACT(DAY FROM FECHA) DIA FROM MATRICULAR
GROUP BY FECHA 
HAVING COUNT(*)= (SELECT MAX(COUNT(*)) FROM MATRICULAR GROUP BY FECHA);


/*15.Nombre de la asignatura que haya tenido más suma de edad de sus alumnos

SELECT ASIG.NOMBRE
FROM ASIGNATURAS ASIG, ALUMNOS ALU, MATRICULAR
WHERE DNI=DNI_ALU AND COD=COD_ASIG
GROUP BY ASIG.NOMBRE
HAVING SUM(EDAD)=
(SELECT MAX(S) FROM (SELECT SUM(EDAD) AS S FROM ASIGNATURAS ASIG ,ALUMNOS, MATRICULAR WHERE COD=COD_ASIG AND DNI=DNI_ALU
GROUP BY ASIG.NOMBRE)TABLA);*/

SELECT ASIG.NOMBRE
FROM ASIGNATURAS ASIG, ALUMNOS ALU, MATRICULAR
WHERE DNI=DNI_ALU AND COD=COD_ASIG
GROUP BY ASIG.NOMBRE
HAVING SUM(EDAD)= (SELECT MAX(SUM(EDAD)) FROM ASIGNATURAS ASIG ,ALUMNOS, MATRICULAR WHERE COD=COD_ASIG AND DNI=DNI_ALU
GROUP BY ASIG.NOMBRE);