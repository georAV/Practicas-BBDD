--CABALLOS
--DROP TABLE APUESTAS;
--DROP TABLE PARTICIPACIONES;
--DROP TABLE CLIENTES;
--DROP TABLE CARRERAS;
--DROP TABLE CABALLOS;

CREATE TABLE CABALLOS(
CODCABALLO VARCHAR2(4) NOT NULL,
NOMBRE VARCHAR2(20),
PESO NUMBER(3),
FECHANACIMIENTO DATE,
PROPIETARIO VARCHAR2 (25),
NACIONALIDAD VARCHAR2(20),
CONSTRAINT PK_CABALLOS PRIMARY KEY (CODCABALLO),
CONSTRAINT CH_PESO CHECK (PESO>=240 AND PESO<=300),
CONSTRAINT CH_NOMBRE CHECK (NOMBRE IS NOT NULL),
CONSTRAINT CH_FECHANACIMIENTO CHECK (TO_CHAR(FECHANACIMIENTO,'YYYY')>'2000')
);

CREATE TABLE CARRERAS(
CODCARRERA VARCHAR2(4) NOT NULL,
FECHAHORA DATE,
NOMBRE VARCHAR2(20),
IMPORTEPREMIO NUMBER (6),
APUESTALIMITE NUMBER(7),
CONSTRAINT PK_CARRERAS PRIMARY KEY (CODCARRERA),
CONSTRAINT CH_FECHAHORA CHECK (TO_CHAR(FECHAHORA,'HH24:MI')>'09:00' AND TO_CHAR(FECHAHORA,'HH24:MI')<'14:30'),
CONSTRAINT CH_APUESTALIMITE CHECK (APUESTALIMITE<=20000)
);

CREATE TABLE PARTICIPACIONES (
CODCABALLO VARCHAR2(4) NOT NULL,
CODCARRERA VARCHAR2(4) NOT NULL,
DORSAL NUMBER(2),
JOCKEY VARCHAR2(20),
POSICIONFINAL NUMBER(2),
CONSTRAINT PK_PARTICIPACIONES PRIMARY KEY (CODCABALLO, CODCARRERA),
CONSTRAINT FK_PARTIC_CABALLO FOREIGN KEY(CODCABALLO) REFERENCES CABALLOS (CODCABALLO),
CONSTRAINT FK_PARTIC_CARRERAS FOREIGN KEY (CODCARRERA) REFERENCES CARRERAS (CODCARRERA),
CONSTRAINT CH_DORSAL CHECK (DORSAL IS NOT NULL),
CONSTRAINT CH_JOCKEY CHECK (JOCKEY IS NOT NULL),
CONSTRAINT CH_POSICIONFINAL CHECK (POSICIONFINAL>0)
);


CREATE TABLE CLIENTES(
DNICLIENTE VARCHAR2(10) NOT NULL,
NOMBRE VARCHAR2(20),
NACIONALIDAD VARCHAR2(20),
CONSTRAINT PK_CLIENTES PRIMARY KEY (DNICLIENTE)
);

CREATE TABLE APUESTAS(
DNICLIENTE VARCHAR2(10) NOT NULL,
CODCABALLO VARCHAR(4) NOT NULL,
CODCARRERA VARCHAR2(4) NOT NULL,
IMPORTE NUMBER(6),
TANTOPORUNO NUMBER(6),
CONSTRAINT PK_APUESTAS PRIMARY KEY(DNICLIENTE, CODCABALLO, CODCARRERA),
CONSTRAINT FK_APUESTAS_CLIENTE FOREIGN KEY (DNICLIENTE) REFERENCES CLIENTES(DNICLIENTE),
CONSTRAINT FK_APUESTAS_CABALLO FOREIGN KEY (CODCABALLO) REFERENCES CABALLOS (CODCABALLO),
CONSTRAINT FK_APUESTAS_CARRERAS FOREIGN KEY (CODCARRERA) REFERENCES CARRERAS (CODCARRERA),
CONSTRAINT CH_IMPORTE CHECK (IMPORTE IS NOT NULL),
CONSTRAINT CH_TANTOPORUNO CHECK (TANTOPORUNO>1)
);
ALTER TABLE APUESTAS MODIFY IMPORTE DEFAULT 300;


-- Ejercicios

--1. Indica el nombre de los caballos, el nombre de los jinetes y la posición, de aquellos que
--hayan quedado entre los dos primeros puestos y que sean de nacionalidad Británica
--ordenados por el nombre del caballo.

SELECT CA.NOMBRE, JOCKEY, POSICIONFINAL FROM CABALLOS CA, PARTICIPACIONES PA
WHERE CA.CODCABALLO=PA.CODCABALLO
AND POSICIONFINAL IN (1, 2)
AND NACIONALIDAD='Británica';

-- 2.Nombre de los Caballos de nacionalidad Española que tengan una A en su nombre o
--Caballos que los clientes que ha apostado por ellos empiecen con consonante, saliendo
--duplicados, a lo que te de quitándole los Caballos que hayan quedado segundo. Debes
--usar conjuntos. 

SELECT DISTINCT NOMBRE FROM 
(SELECT NOMBRE FROM CABALLOS
WHERE NACIONALIDAD='Española'
AND NOMBRE LIKE '%A%' OR NOMBRE LIKE '%a%'
UNION
SELECT CA.NOMBRE FROM CABALLOS CA, APUESTAS AP, CLIENTES CL
WHERE CA.CODCABALLO=AP.CODCABALLO AND AP.DNICLIENTE=CL.DNICLIENTE
AND (CL.NOMBRE NOT LIKE 'A%' AND CL.NOMBRE NOT LIKE 'E%' 
    AND CL.NOMBRE NOT LIKE 'I%' AND CL.NOMBRE NOT LIKE 'O%' AND CL.NOMBRE NOT LIKE 'U%')
OR (CL.NOMBRE NOT LIKE 'a%' AND CL.NOMBRE NOT LIKE 'e%' 
    AND CL.NOMBRE NOT LIKE 'i%' AND CL.NOMBRE NOT LIKE 'o%' AND CL.NOMBRE NOT LIKE 'u%')), PARTICIPACIONES
WHERE POSICIONFINAL!=2;

--3.Nos ordenan eliminar las carreras en las que no hay caballos inscritos.

DELETE CARRERAS CA WHERE CODCARRERA NOT IN
(SELECT PA.CODCARRERA FROM CARRERAS CA, PARTICIPACIONES PA WHERE PA.CODCARRERA=CA.CODCARRERA);

-- 4.  Como podrás comprobar en la Carrera C6 no hay caballos para realizarla. Introduce 4
--caballos de lo ya existentes en la carrera C6. Te puedes inventar jockeys y dorsales.

INSERT INTO carreras(codcarrera, fechahora, importepremio, apuestalimite)
VALUES('C6', TO_CHAR('21/10/2009 11:00', 'DD/MM/YYYY HH24:MI'), 5000, 400);

INSERT INTO PARTICIPACIONES (CODCABALLO, CODCARRERA, DORSAL,JOCKEY) VALUES (3,'C6',4,'Jesús Navas');
INSERT INTO PARTICIPACIONES (CODCABALLO, CODCARRERA, DORSAL,JOCKEY) VALUES (1,'C6',3,'Claudio Carudel');
INSERT INTO PARTICIPACIONES (CODCABALLO, CODCARRERA, DORSAL,JOCKEY) VALUES (2,'C6',2,'Luis Parrales');
INSERT INTO PARTICIPACIONES (CODCABALLO, CODCARRERA, DORSAL,JOCKEY) VALUES (4,'C6',1,'Janis Joplin');

-- 5. Ya se ha celebrado la carrera C6 y los caballos llegan por orden de edad del más joven
--al más adulto.
--Actualiza la tabla Participaciones con los resultados de la carrera.

SELECT NOMBRE FROM CABALLOS ORDER BY FECHANACIMIENTO;
UPDATE PARTICIPACIONES SET POSICIONFINAL=1 WHERE CODCARRERA='CS' AND CODCABALLO=4;
UPDATE PARTICIPACIONES SET POSICIONFINAL=2 WHERE CODCARRERA='CS' AND CODCABALLO=3;
UPDATE PARTICIPACIONES SET POSICIONFINAL=3 WHERE CODCARRERA='CS' AND CODCABALLO=2;
UPDATE PARTICIPACIONES SET POSICIONFINAL=4 WHERE CODCARRERA='CS' AND CODCABALLO=1;

--Ejercicio 6 -- SIN TERMINAR .Me falta C
 --Añade los siguientes CHECKS a las tablas del modelo:
 -- a) En las Participaciones los nombres de los jockeys tienen siempre las iniciales en mayúsculas.
 -- b) La nacionalidad de los caballos solo puede ser Británica, Española, o Árabe.
 -- c) La temporada de carreras solo puede transcurrir del 10 de Marzo al 10 deNoviembre.
 
 ALTER TABLE PARTICIPACIONES ADD CONSTRAINT CH_NOM_JOCKEY CHECK (JOCKEY = INITCAP(JOCKEY));
 
 UPDATE CABALLOS SET NACIONALIDAD='Árabe' WHERE NACIONALIDAD NOT IN ('Británica', 'Española', 'Árabe');
 ALTER TABLE CABALLOS ADD CONSTRAINT CH_NACIONALIDAD CHECK (NACIONALIDAD IN ('Británica', 'Española', 'Árabe'));
 

-- Ejercicio 7
 --Saca de cada una de las carreras el número total de participantes, debes incluir aquellas
 --en las que no hay caballos inscritos.
 
--Inserto C7 por comprobar después. 
INSERT INTO carreras(codcarrera, fechahora, importepremio, apuestalimite)
VALUES('C7', TO_CHAR('21/10/2008 12:00','DD/MM/YYYY HH24:MI'), 25000, 2400);
 
SELECT COUNT(PA.CODCARRERA) FROM PARTICIPACIONES PA, CARRERAS CA
WHERE PA.CODCARRERA(+)=CA.CODCARRERA
GROUP BY PA.CODCARRERA ORDER BY PA.CODCARRERA;

--Ejercicio 8
 --Te piden que introduzcas la siguiente apunesta, un cliente con nacionalidad Escocesa
--ha apostado por el caballo más pesado de la primera carrera que se corra duante el
--verano del 2009 con un importe de 2000, y sabemos que en ese momento para esa
--carrera a ese caballo se paga 30 a 1.
 
INSERT INTO APUESTAS (DNICLIENTE, CODCABALLO, CODCARRERA, IMPORTE, TANTOPORUNO)
VALUES ((SELECT DNICLIENTE FROM CLIENTES WHERE NACIONALIDAD='Escocesa'), 
             (SELECT CODCABALLO FROM CABALLOS WHERE PESO=(SELECT MAX(PESO) FROM CABALLOS)),
                 (SELECT CODCARRERA FROM CARRERAS WHERE FECHAHORA=(SELECT MIN(FECHAHORA)FROM CARRERAS)),
                      2000, 30);

-- Ejercicio 9 -- SIN TERMINAR
--Obtén el nombre del caballo y la carrera con más peso en cada carrera

SELECT CAB.NOMBRE,PA.CODCARRERA FROM CABALLOS CAB, PARTICIPACIONES PA, CARRERAS CAR 
WHERE CAB.CODCABALLO=PA.CODCABALLO AND PA.CODCARRERA=CAR.CODCARRERA
AND CAB.NOMBRE IN (SELECT NOMBRE FROM CABALLOS WHERE PESO=(SELECT MAX(PESO)FROM CABALLOS))
GROUP BY CAB.NOMBRE,PA.CODCARRERA;

-- Ejercicio 10 
 --Teniendo en cuenta estas dos premisas:
--1) Un cliente gana una apuesta si el caballo por el que apuesta gana la carrera.
--2) El importe de su premio es el importe apostado multiplicado por el tanto por uno de
--la apuesta correspondiente.
--Muestra los nombres de todos los clientes que con sus apuestas hayan ganado más de
--30000 euros

SELECT NOMBRE, (IMPORTE*TANTOPORUNO) FROM CLIENTES CL, APUESTAS AP, PARTICIPACIONES PA WHERE
CL.DNICLIENTE=AP.DNICLIENTE AND AP.CODCABALLO=PA.CODCABALLO
AND POSICIONFINAL=1
AND (IMPORTE*TANTOPORUNO)>=30000;

--Ejercicio 11
--Dime jockey que más carreras ha ganado 

SELECT JOCKEY FROM CARRERAS CA, PARTICIPACIONES PA
WHERE CA.CODCARRERA=PA.CODCARRERA AND POSICIONFINAL=1
GROUP BY JOCKEY
HAVING COUNT(POSICIONFINAL)=(SELECT MAX(COUNT(POSICIONFINAL)) FROM PARTICIPACIONES WHERE POSICIONFINAL=1 GROUP BY JOCKEY);

 --Ejercicio 12 -- SIN TERMINAR
--Sabiendo que el premio de una carrera se lo lleva el vencedor de la misma, dime el
--propietario que más dinero ha ganado en premios con sus caballos 

SELECT PROPIETARIO FROM CABALLOS CA WHERE CA.CODCABALLO IN (
SELECT CODCABALLO FROM PARTICIPACIONES WHERE POSICIONFINAL=1
GROUP BY CODCABALLO
HAVING COUNT(POSICIONFINAL)=(SELECT MAX(COUNT(POSICIONFINAL)) FROM PARTICIPACIONES WHERE POSICIONFINAL=1 GROUP BY CODCABALLO));

 --Ejercicio 13
--Sacas los caballos (sus nombres) que más veces han quedado entre los tres primeros
--puestos.

SELECT NOMBRE FROM CABALLOS WHERE CODCABALLO IN
(SELECT CODCABALLO FROM PARTICIPACIONES WHERE POSICIONFINAL IN (1,2,3) GROUP BY CODCABALLO
HAVING COUNT(*)= (SELECT MAX(COUNT(*)) FROM PARTICIPACIONES WHERE POSICIONFINAL IN (1,2,3) GROUP BY CODCABALLO));

--Ejercicio 14
--Obtén los clientes y la cantidad de caballos sobre los que han apostado, teniendo que
--haber apostado a más de 1 caballo y con una suma de todas sus apuestas de más de
--3.000 euros.

SELECT CL.NOMBRE, COUNT(*), SUM(IMPORTE) FROM CLIENTES CL, APUESTAS AP 
WHERE CL.DNICLIENTE=AP.DNICLIENTE
GROUP BY CL.NOMBRE
HAVING COUNT(*)>1 AND SUM(IMPORTE)>3000;

